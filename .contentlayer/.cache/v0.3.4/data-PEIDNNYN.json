{
  "cacheItemsMap": {
    "nlw-unite.mdx": {
      "document": {
        "title": "Nlw Unite Nodejs",
        "date": "2024-04-15T00:00:00.000Z",
        "description": "O pass.in é uma aplicação de gestão de participantes em eventos presenciais, a ferramenta permite que o organizador cadastre um evento e abra uma página pública de inscrição, os participantes inscritos podem emitir uma credencial para check-in no dia do evento, sistema fará um scan da credencial do participante para permitir a entrada no evento.",
        "githubLink": "https://github.com/matheusnff85/nlw-unite-nodejs",
        "body": {
          "raw": "\n# pass.in\n\nO pass.in é uma aplicação de **gestão de participantes em eventos presenciais**.\n\nA ferramenta permite que o organizador cadastre um evento e abra uma página pública de inscrição.\n\nOs participantes inscritos podem emitir uma credencial para check-in no dia do evento.\n\nO sistema fará um scan da credencial do participante para permitir a entrada no evento.\n\n## Tecnologias Utilizadas\n\n- Typescript, Fastify, Prisma, Zod.\n\n## Requisitos\n\n### Requisitos funcionais\n\n- [x] O organizador deve poder cadastrar um novo evento;\n- [x] O organizador deve poder visualizar dados de um evento;\n- [x] O organizador deve poder visualizar a lista de participantes;\n- [x] O participante deve poder se inscrever em um evento;\n- [x] O participante deve poder visualizar seu crachá de inscrição;\n- [x] O participante deve poder realizar check-in no evento;\n\n### Regras de negócio\n\n- [x] O participante só pode se inscrever em um evento uma única vez;\n- [x] O participante só pode se inscrever em eventos com vagas disponíveis;\n- [x] O participante só pode realizar check-in em um evento uma única vez;\n\n## Rotas\n\nO pass.in possui uma certa variedade de rotas que garantem seu funcionamento corretamente, são elas rotas para criação de eventos e realização de check-in, além de também retornarem informações sendo dos frequentantes do evento, informações do próprio evento, entre outras.\n\n![alt text](./images/image.png)\n\nÉ possível acessar as informações e seus detalhes exemplicados na imagem acima através da rota .../docs da aplicação, por lá é possível realizar testes as rotas bem como visualizar a entrada esperada e o retorno de cada uma das rotas.\n\n## Como utilizar a aplicação\n\nCaso deseje utilizar a aplicação localmente, basta realizar o clone do projeto por meio do comando\n`git clone git@github.com:matheusnff85/nlw-unite-nodejs.git`.\n\nApós realizado o processo, basta via terminal na pasta raiz do projeto utilizar o comando `npm install` para instalar suas dependencias.\n\nAgora renomeie o arquivo `.env.example` para somente `.env` e use o comando `npm run build` após utilizado use `npm start` para iniciar a aplicação.\n\nCom isso a aplicação estará funcionando, basta utilizar o comando `npx prisma db seed` caso deseje preencher o banco de dados com um evento e participantes ficticios, e caso também deseje ter uma visualização melhor dos dados preenchidos na tabela também como poder manipular os mesmos, basta utilizar o comando `npm run db:studio` em um terminal disponível.\n\nSerá aberta a visualização abaixo:\n\n![alt text](/images/studio-1.png)\n![alt text](/images/studio-2.png)\n\n# Desenvolvido por: [Matheus Marinho](https://www.linkedin.com/in/matheus-marinhodsp/).\n",
          "html": "<h1>pass.in</h1>\n<p>O pass.in é uma aplicação de <strong>gestão de participantes em eventos presenciais</strong>.</p>\n<p>A ferramenta permite que o organizador cadastre um evento e abra uma página pública de inscrição.</p>\n<p>Os participantes inscritos podem emitir uma credencial para check-in no dia do evento.</p>\n<p>O sistema fará um scan da credencial do participante para permitir a entrada no evento.</p>\n<h2>Tecnologias Utilizadas</h2>\n<ul>\n<li>Typescript, Fastify, Prisma, Zod.</li>\n</ul>\n<h2>Requisitos</h2>\n<h3>Requisitos funcionais</h3>\n<ul>\n<li>[x] O organizador deve poder cadastrar um novo evento;</li>\n<li>[x] O organizador deve poder visualizar dados de um evento;</li>\n<li>[x] O organizador deve poder visualizar a lista de participantes;</li>\n<li>[x] O participante deve poder se inscrever em um evento;</li>\n<li>[x] O participante deve poder visualizar seu crachá de inscrição;</li>\n<li>[x] O participante deve poder realizar check-in no evento;</li>\n</ul>\n<h3>Regras de negócio</h3>\n<ul>\n<li>[x] O participante só pode se inscrever em um evento uma única vez;</li>\n<li>[x] O participante só pode se inscrever em eventos com vagas disponíveis;</li>\n<li>[x] O participante só pode realizar check-in em um evento uma única vez;</li>\n</ul>\n<h2>Rotas</h2>\n<p>O pass.in possui uma certa variedade de rotas que garantem seu funcionamento corretamente, são elas rotas para criação de eventos e realização de check-in, além de também retornarem informações sendo dos frequentantes do evento, informações do próprio evento, entre outras.</p>\n<p><img src=\"./images/image.png\" alt=\"alt text\"></p>\n<p>É possível acessar as informações e seus detalhes exemplicados na imagem acima através da rota .../docs da aplicação, por lá é possível realizar testes as rotas bem como visualizar a entrada esperada e o retorno de cada uma das rotas.</p>\n<h2>Como utilizar a aplicação</h2>\n<p>Caso deseje utilizar a aplicação localmente, basta realizar o clone do projeto por meio do comando\n<code>git clone git@github.com:matheusnff85/nlw-unite-nodejs.git</code>.</p>\n<p>Após realizado o processo, basta via terminal na pasta raiz do projeto utilizar o comando <code>npm install</code> para instalar suas dependencias.</p>\n<p>Agora renomeie o arquivo <code>.env.example</code> para somente <code>.env</code> e use o comando <code>npm run build</code> após utilizado use <code>npm start</code> para iniciar a aplicação.</p>\n<p>Com isso a aplicação estará funcionando, basta utilizar o comando <code>npx prisma db seed</code> caso deseje preencher o banco de dados com um evento e participantes ficticios, e caso também deseje ter uma visualização melhor dos dados preenchidos na tabela também como poder manipular os mesmos, basta utilizar o comando <code>npm run db:studio</code> em um terminal disponível.</p>\n<p>Será aberta a visualização abaixo:</p>\n<p><img src=\"/images/studio-1.png\" alt=\"alt text\">\n<img src=\"/images/studio-2.png\" alt=\"alt text\"></p>\n<h1>Desenvolvido por: <a href=\"https://www.linkedin.com/in/matheus-marinhodsp/\">Matheus Marinho</a>.</h1>"
        },
        "_id": "nlw-unite.mdx",
        "_raw": {
          "sourceFilePath": "nlw-unite.mdx",
          "sourceFileName": "nlw-unite.mdx",
          "sourceFileDir": ".",
          "contentType": "mdx",
          "flattenedPath": "nlw-unite"
        },
        "type": "Post"
      },
      "documentHash": "1722985470664",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
